#include "out.h"



void _DT_INIT(void)

{
  __gmon_start__();
  return;
}



void FUN_00401020(void)

{
  (*(code *)(undefined *)0x0)();
  return;
}



void png_write_info(void)

{
  png_write_info();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

void free(void *__ptr)

{
  free(__ptr);
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * strncpy(char *__dest,char *__src,size_t __n)

{
  char *pcVar1;
  
  pcVar1 = strncpy(__dest,__src,__n);
  return pcVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * strcpy(char *__dest,char *__src)

{
  char *pcVar1;
  
  pcVar1 = strcpy(__dest,__src);
  return pcVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int mkdir(char *__path,__mode_t __mode)

{
  int iVar1;
  
  iVar1 = mkdir(__path,__mode);
  return iVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int puts(char *__s)

{
  int iVar1;
  
  iVar1 = puts(__s);
  return iVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

size_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)

{
  size_t sVar1;
  
  sVar1 = fread(__ptr,__size,__n,__stream);
  return sVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int fclose(FILE *__stream)

{
  int iVar1;
  
  iVar1 = fclose(__stream);
  return iVar1;
}



void png_write_image(void)

{
  png_write_image();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * stpcpy(char *__dest,char *__src)

{
  char *pcVar1;
  
  pcVar1 = stpcpy(__dest,__src);
  return pcVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

size_t strlen(char *__s)

{
  size_t sVar1;
  
  sVar1 = strlen(__s);
  return sVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int printf(char *__format,...)

{
  int iVar1;
  
  iVar1 = printf(__format);
  return iVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * strrchr(char *__s,int __c)

{
  char *pcVar1;
  
  pcVar1 = strrchr(__s,__c);
  return pcVar1;
}



void png_get_rowbytes(void)

{
  png_get_rowbytes();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * strncat(char *__dest,char *__src,size_t __n)

{
  char *pcVar1;
  
  pcVar1 = strncat(__dest,__src,__n);
  return pcVar1;
}



void png_write_end(void)

{
  png_write_end();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

long ftell(FILE *__stream)

{
  long lVar1;
  
  lVar1 = ftell(__stream);
  return lVar1;
}



void png_create_info_struct(void)

{
  png_create_info_struct();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

void * malloc(size_t __size)

{
  void *pvVar1;
  
  pvVar1 = malloc(__size);
  return pvVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int fseek(FILE *__stream,long __off,int __whence)

{
  int iVar1;
  
  iVar1 = fseek(__stream,__off,__whence);
  return iVar1;
}



void png_init_io(void)

{
  png_init_io();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

FILE * fopen(char *__filename,char *__modes)

{
  FILE *pFVar1;
  
  pFVar1 = fopen(__filename,__modes);
  return pFVar1;
}



void png_create_write_struct(void)

{
  png_create_write_struct();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

char * strcat(char *__dest,char *__src)

{
  char *pcVar1;
  
  pcVar1 = strcat(__dest,__src);
  return pcVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int sprintf(char *__s,char *__format,...)

{
  int iVar1;
  
  iVar1 = sprintf(__s,__format);
  return iVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

size_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)

{
  size_t sVar1;
  
  sVar1 = fwrite(__ptr,__size,__n,__s);
  return sVar1;
}



void png_set_IHDR(void)

{
  png_set_IHDR();
  return;
}



undefined8 FUN_004011e0(int param_1,long param_2)

{
  int iVar1;
  FILE *__stream;
  undefined8 uVar2;
  
  printf("HK89 dial decompressor %s\n",&DAT_004034b4);
  DAT_00405120 = malloc(0x12c000);
  if (DAT_00405120 == (void *)0x0) {
    printf("Unable to reserve %d byte memory!\n");
    uVar2 = 0;
  }
  else {
    DAT_00538c30 = 0x12c000;
    if (param_1 < 2) {
      puts("No .bin filename specified!");
      free(DAT_00405120);
      uVar2 = 0;
    }
    else {
      DAT_00538c20 = *(char **)(param_2 + 8);
      __stream = fopen(DAT_00538c20,"rb");
      if (__stream == (FILE *)0x0) {
        printf("No such file! (%s)\n",DAT_00538c20);
        uVar2 = 0;
      }
      else {
        iVar1 = FUN_004014e0(__stream);
        if (DAT_00538c30 < iVar1) {
          printf("File too large (>%d Byte)\n");
          free(DAT_00405120);
          uVar2 = 0;
        }
        else {
          fread(DAT_00405120,(long)iVar1,1,__stream);
          fclose(__stream);
          FUN_00401520(DAT_00538c20);
          DAT_00538d5a = *(undefined1 *)((long)DAT_00405120 + 2);
          FUN_00402cc0(iVar1);
          free(DAT_00405120);
          uVar2 = 1;
        }
      }
    }
  }
  return uVar2;
}



void processEntry entry(undefined8 param_1,undefined8 param_2)

{
  undefined1 auStack_8 [8];
  
  __libc_start_main(FUN_004011e0,param_2,&stack0x00000008,FUN_00402ed0,FUN_00402f40,param_1,
                    auStack_8);
  do {
                    // WARNING: Do nothing block with infinite loop
  } while( true );
}



void FUN_00401350(void)

{
  return;
}



// WARNING: Removing unreachable block (ram,0x0040136d)
// WARNING: Removing unreachable block (ram,0x00401377)

void FUN_00401360(void)

{
  return;
}



// WARNING: Removing unreachable block (ram,0x004013af)
// WARNING: Removing unreachable block (ram,0x004013b9)

void FUN_00401390(void)

{
  return;
}



void _FINI_0(void)

{
  if (DAT_00405100 == '\0') {
    FUN_00401360();
    DAT_00405100 = 1;
    return;
  }
  return;
}



void _INIT_0(void)

{
  FUN_00401390();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401410(long param_1)

{
  if (DAT_00405104 == 0) {
    DAT_00405104 = 1;
    _DAT_00538c3c = *(undefined4 *)(param_1 + 0xc);
    _DAT_00538c34 = *(undefined4 *)(param_1 + 0x10);
    _DAT_00538c1c = (uint)*(ushort *)(param_1 + 8);
    _DAT_00538c2c = (uint)*(ushort *)(param_1 + 10);
  }
  return;
}



void FUN_00401450(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401460(long param_1)

{
  if (DAT_00405108 == 0) {
    DAT_00405108 = 1;
    _DAT_00538c28 = *(undefined4 *)(param_1 + 0xc);
    _DAT_00538c4c = *(undefined4 *)(param_1 + 0x10);
    _DAT_00538c48 = (int)*(short *)(param_1 + 8);
    _DAT_00538c38 = (int)*(short *)(param_1 + 10);
  }
  return;
}



void FUN_004014a0(long param_1,char *param_2)

{
  sprintf(param_2,&DAT_00403010,(ulong)(*(byte *)(param_1 + 1) & 0x7f),
          (ulong)(((uint)*(byte *)(param_1 + 3) + (uint)*(byte *)(param_1 + 3) * 4) * 2));
  return;
}



void FUN_004014d0(void)

{
  return;
}



ulong FUN_004014e0(FILE *param_1)

{
  ulong uVar1;
  
  fseek(param_1,0,2);
  uVar1 = ftell(param_1);
  fseek(param_1,0,0);
  return uVar1 & 0xffffffff;
}



void FUN_00401520(char *param_1)

{
  char *pcVar1;
  char acStack_108 [256];
  
  strncpy(acStack_108,"_",0xf6);
  strncat(acStack_108,param_1,0xf6);
  pcVar1 = strrchr(acStack_108,0x2e);
  *pcVar1 = '\0';
  strcpy(&DAT_00538b20,acStack_108);
  mkdir(acStack_108,0x1ff);
  return;
}



void FUN_00401580(void)

{
  int *in_stack_00000018;
  
  if (*in_stack_00000018 < 1) {
    return;
  }
  *in_stack_00000018 = *in_stack_00000018 + -1;
  return;
}



void FUN_004015a0(byte *param_1,byte *param_2,byte *param_3,char *param_4)

{
  byte bVar1;
  byte bVar2;
  
  bVar1 = *param_1;
  bVar2 = param_1[1];
  *param_2 = bVar1 & 0xf8;
  *param_3 = (byte)((int)(uint)CONCAT11(bVar1,bVar2) >> 3) & 0xfc;
  *param_4 = bVar2 << 3;
  return;
}



void FUN_004015d0(long param_1,long param_2,undefined8 param_3,int param_4,int param_5)

{
  byte bVar1;
  byte bVar2;
  byte *pbVar3;
  byte *pbVar4;
  byte *pbVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  
  if (0 < param_5) {
    uVar6 = 0;
    iVar7 = 0;
    iVar8 = 0;
    do {
      if (0 < param_4) {
        pbVar3 = (byte *)((int)uVar6 + param_1);
        pbVar4 = (byte *)(param_2 + iVar8);
        do {
          bVar1 = pbVar3[1];
          pbVar5 = pbVar4 + 4;
          bVar2 = pbVar3[2];
          pbVar4[3] = *pbVar3;
          *pbVar4 = bVar1 & 0xf8;
          pbVar4[2] = bVar2 << 3;
          pbVar4[1] = (byte)((int)(uint)CONCAT11(bVar1,bVar2) >> 3) & 0xfc;
          pbVar3 = pbVar3 + 3;
          pbVar4 = pbVar5;
        } while ((byte *)((long)iVar8 + param_2 + 4 + (ulong)(param_4 - 1U) * 4) != pbVar5);
        iVar8 = iVar8 + 4 + (param_4 - 1U) * 4;
        uVar6 = uVar6 + param_4 * 3;
      }
      if ((uVar6 & 3) != 0) {
        uVar6 = (uVar6 & 0xfffffffc) + 4;
      }
      iVar7 = iVar7 + 1;
    } while (param_5 != iVar7);
    return;
  }
  return;
}



uint FUN_004016b0(ushort *param_1,long param_2,int *param_3,int param_4,uint param_5,int param_6,
                 int param_7)

{
  byte bVar1;
  uint uVar2;
  uint uVar3;
  byte *pbVar4;
  uint uVar5;
  int iVar6;
  int iVar7;
  ulong uVar8;
  byte bVar9;
  long lVar10;
  uint uVar11;
  uint uVar12;
  ulong uVar13;
  uint uVar14;
  ulong unaff_R15;
  uint local_58;
  
  iVar6 = 0;
  uVar14 = (uint)*param_1;
  local_58 = 0;
  if (0 < (int)param_5) {
    do {
      uVar13 = 0;
      if (0 < param_4) {
        do {
          uVar5 = uVar14 + 1;
          bVar9 = *(byte *)((long)param_1 + (long)(int)uVar14);
          uVar12 = (uint)bVar9;
          pbVar4 = (byte *)((long)(int)uVar5 + (long)param_1);
          if (bVar9 == 0) {
            if (param_7 == 0) {
              uVar2 = (uint)*pbVar4;
              uVar12 = 1;
            }
            else {
              puts("cnt=0 , exiting...");
              uVar12 = 1;
              uVar2 = (uint)*pbVar4;
            }
LAB_00401732:
            uVar8 = 0;
            uVar14 = uVar5;
            while( true ) {
              if (param_6 == 0) {
                pbVar4 = (byte *)((long)(int)uVar14 + (long)param_1);
              }
              else {
                uVar14 = uVar14 + 1;
                unaff_R15 = (ulong)uVar2;
                pbVar4 = (byte *)((long)(int)uVar14 + (long)param_1);
                uVar2 = (uint)*pbVar4;
              }
              uVar14 = uVar14 + 2;
              uVar5 = uVar2 << 8 | (uint)pbVar4[1];
              *(byte *)(param_2 + iVar6) = (byte)uVar2 & 0xf8;
              *(byte *)(param_2 + (iVar6 + 1)) = (byte)((int)uVar5 >> 3) & 0xfc;
              *(char *)(param_2 + (iVar6 + 2)) = (char)(uVar5 << 3);
              iVar7 = iVar6 + 3;
              if (param_6 != 0) {
                *(char *)(param_2 + (iVar6 + 3)) = (char)unaff_R15;
                iVar7 = iVar6 + 4;
              }
              iVar6 = iVar7;
              uVar5 = (int)uVar8 + 1;
              uVar8 = (ulong)uVar5;
              if (uVar5 == uVar12) break;
              uVar2 = (uint)*(byte *)((long)param_1 + (long)(int)uVar14);
            }
            uVar5 = (int)uVar13 + uVar5;
            uVar13 = (ulong)uVar5;
            if (param_7 != 0) {
              printf("unique: cnt=%d j=%d i=%d\n",uVar8,(ulong)local_58,uVar13);
              uVar13 = (ulong)uVar5;
            }
          }
          else {
            uVar2 = (uint)*pbVar4;
            if (-1 < (char)bVar9) goto LAB_00401732;
            bVar9 = bVar9 & 0x7f;
            if (param_6 != 0) {
              uVar5 = uVar14 + 2;
              unaff_R15 = (ulong)uVar2;
              pbVar4 = (byte *)((long)(int)uVar5 + (long)param_1);
              uVar2 = (uint)*pbVar4;
            }
            bVar1 = pbVar4[1];
            uVar14 = uVar5 + 2;
            uVar11 = uVar2 << 8 | (uint)bVar1;
            uVar5 = uVar2 << 8 & 0xf800;
            uVar2 = (int)uVar11 >> 3;
            uVar12 = (uint)bVar9;
            if (bVar9 != 0) {
              uVar3 = 0;
              iVar7 = iVar6;
              do {
                while( true ) {
                  iVar6 = iVar7 + 3;
                  *(char *)(param_2 + iVar7) = (char)(uVar5 >> 8);
                  *(byte *)(param_2 + (iVar7 + 1)) = (byte)uVar2 & 0xfc;
                  *(char *)(param_2 + (iVar7 + 2)) = (char)(uVar11 << 3);
                  if (param_6 != 0) break;
                  uVar3 = uVar3 + 1;
                  iVar7 = iVar6;
                  if (uVar3 == uVar12) goto LAB_004018ce;
                }
                lVar10 = (long)iVar6;
                uVar3 = uVar3 + 1;
                iVar6 = iVar7 + 4;
                *(char *)(param_2 + lVar10) = (char)unaff_R15;
                iVar7 = iVar6;
              } while (uVar3 != uVar12);
            }
LAB_004018ce:
            uVar12 = (int)uVar13 + uVar12;
            uVar13 = (ulong)uVar12;
            if (param_7 != 0) {
              printf("ism   : cnt=%d r=%d g=%d b=%d a=%d j=%d i=%d\n",(ulong)bVar9,
                     (ulong)(uVar5 >> 8),(ulong)(uVar2 & 0xfc),(ulong)((bVar1 & 0x1f) << 3),
                     unaff_R15 & 0xff,(ulong)local_58,uVar13);
              uVar13 = (ulong)uVar12;
            }
          }
        } while ((int)uVar13 < param_4);
      }
      local_58 = local_58 + 1;
    } while (param_5 != local_58);
  }
  *param_3 = iVar6;
  uVar14 = (uVar14 + 1) - (uint)((uVar14 & 1) == 0);
  if ((uVar14 & 3) != 0) {
    uVar14 = uVar14 + 2;
  }
  return uVar14;
}



void FUN_00401980(void *param_1,int param_2,char *param_3)

{
  FILE *__s;
  
  __s = fopen(param_3,"wb");
  fwrite(param_1,(long)param_2,1,__s);
  fclose(__s);
  return;
}



void FUN_004019c0(long param_1,int param_2,int param_3,int param_4,int param_5)

{
  uint uVar1;
  uint *__dest;
  undefined *puVar2;
  char *__dest_00;
  uint *puVar3;
  uint *puVar4;
  uint uVar5;
  ulong uVar6;
  byte bVar7;
  uint uVar8;
  uint uVar9;
  ulong uVar10;
  bool bVar11;
  int local_20cc;
  uint local_20ac;
  ulong local_20a8;
  uint local_20a0;
  uint local_209c;
  uint local_2098;
  uint local_2088;
  uint local_207c;
  char local_2078 [64];
  char local_2038 [8200];
  
  __dest = (uint *)malloc(0x13a600);
  *(undefined1 *)__dest = 0;
  if (param_5 < 1) {
    return;
  }
  puVar2 = &DAT_004032bf;
  local_2088 = 0;
  if (param_4 != 0) {
    puVar2 = &DAT_004032ba;
  }
  uVar5 = 0;
  local_20a0 = 0;
  local_20ac = 0;
  local_20cc = 0;
  do {
    if ((uVar5 & 3) != 0) {
      uVar5 = uVar5 + 2;
    }
    uVar8 = param_3 * 4 + uVar5;
    strcat((char *)__dest,local_2038);
    printf(local_2038);
    puVar4 = __dest;
    if (0 < param_3) {
      local_20a8 = 0;
      do {
        local_2038[0] = '\0';
        local_2098 = 0;
        if (param_2 < 1) {
          local_207c = 0;
          uVar6 = 0;
          uVar10 = 0;
          local_209c = 0;
        }
        else {
          uVar6 = 0;
          uVar10 = 0;
          local_209c = 0;
          local_207c = 0;
          uVar1 = uVar8;
          do {
            while( true ) {
              uVar8 = uVar1 + 1;
              bVar7 = *(byte *)(param_1 + (int)uVar1);
              if ((bVar7 & 0x7f) == 0) {
                sprintf(local_2078,"counter 0 error at line:%d pix:%d %s, ",local_20a8 & 0xffffffff,
                        uVar10,puVar2);
                strcat(local_2038,local_2078);
                goto LAB_00401c9c;
              }
              if ((char)bVar7 < '\0') break;
              local_2098 = local_2098 + bVar7;
              local_20a0 = local_20a0 + bVar7;
              local_209c = local_209c + 1;
              local_20ac = local_20ac + 1;
              sprintf(local_2078,"#%02X, ");
              strcat(local_2038,local_2078);
              uVar9 = (int)uVar10 + (uint)bVar7;
              uVar10 = (ulong)uVar9;
              do {
                uVar8 = (uVar8 - (param_4 == 0)) + 3;
                bVar7 = bVar7 - 1;
              } while (bVar7 != 0);
              uVar1 = uVar8;
              if (param_2 <= (int)uVar9) goto LAB_00401c9c;
            }
            local_2088 = local_2088 + 1;
            uVar6 = (ulong)((int)uVar6 + 1);
            sprintf(local_2078,"#%02X, ");
            strcat(local_2038,local_2078);
            local_207c = local_207c + (bVar7 & 0x7f);
            if (param_4 != 0) {
              uVar8 = uVar1 + 2;
            }
            uVar9 = (int)uVar10 + (bVar7 & 0x7f);
            uVar10 = (ulong)uVar9;
            uVar8 = uVar8 + 2;
            uVar1 = uVar8;
          } while ((int)uVar9 < param_2);
        }
LAB_00401c9c:
        sprintf(local_2078,"= %d pixel\n",uVar10);
        strcat(local_2038,local_2078);
        sprintf(local_2078,"%02hhX,%02hhX - (%02hhX,%02hhX) - (%03X,%03X) {%04X}{%04X}{%04X} ",
                (ulong)*(byte *)(param_1 + (int)uVar5 + 3 + local_20a8 * 4),
                (ulong)*(byte *)(param_1 + (int)uVar5 + 2 + local_20a8 * 4),(ulong)local_20ac,
                (ulong)local_20a0,(ulong)local_2088,(ulong)local_209c,uVar6,(ulong)local_2098,
                (ulong)local_207c);
        puVar4 = __dest;
        do {
          puVar3 = puVar4;
          uVar9 = *puVar3 + 0xfefefeff & ~*puVar3;
          uVar1 = uVar9 & 0x80808080;
          puVar4 = puVar3 + 1;
        } while (uVar1 == 0);
        bVar11 = (uVar9 & 0x8080) == 0;
        if (bVar11) {
          uVar1 = uVar1 >> 0x10;
        }
        if (bVar11) {
          puVar4 = (uint *)((long)puVar3 + 6);
        }
        __dest_00 = stpcpy((char *)((long)puVar4 + (-3 - (ulong)CARRY1((byte)uVar1,(byte)uVar1))),
                           local_2078);
        strcpy(__dest_00,local_2038);
        bVar11 = param_3 - 1 != local_20a8;
        puVar4 = __dest;
        local_20a8 = local_20a8 + 1;
      } while (bVar11);
    }
    do {
      puVar3 = puVar4;
      uVar1 = *puVar3 + 0xfefefeff & ~*puVar3;
      uVar5 = uVar1 & 0x80808080;
      puVar4 = puVar3 + 1;
    } while (uVar5 == 0);
    bVar11 = (uVar1 & 0x8080) == 0;
    if (bVar11) {
      uVar5 = uVar5 >> 0x10;
    }
    if (bVar11) {
      puVar4 = (uint *)((long)puVar3 + 6);
    }
    local_20cc = local_20cc + 1;
    *(undefined2 *)((long)puVar4 + (-3 - (ulong)CARRY1((byte)uVar5,(byte)uVar5))) = 10;
    if (param_5 == local_20cc) {
      return;
    }
    uVar5 = (uVar8 + 1) - (uint)((uVar8 & 1) == 0);
  } while( true );
}



void FUN_00401e40(char *param_1,int param_2,int param_3,int param_4,long param_5)

{
  long *plVar1;
  FILE *__stream;
  undefined8 uVar2;
  undefined8 uVar3;
  long *__ptr;
  size_t __size;
  void *pvVar4;
  long lVar5;
  long *plVar6;
  int iVar7;
  long *plVar8;
  int iVar9;
  int iVar10;
  long lVar11;
  int iVar12;
  
  __stream = fopen(param_1,"wb");
  uVar2 = png_create_write_struct("1.6.36",0,0,0);
  uVar3 = png_create_info_struct(uVar2);
  png_init_io(uVar2,__stream);
  iVar12 = 4 - (uint)(param_4 == 0);
  png_set_IHDR(uVar2,uVar3,param_2,param_3,8,(-(uint)(param_4 == 0) & 0xfffffffc) + 6,0,0,0);
  __ptr = (long *)malloc((long)param_3 << 3);
  if (param_3 < 1) {
    png_write_info(uVar2,uVar3);
    png_write_image(uVar2,__ptr);
    png_write_end(uVar2,0);
  }
  else {
    plVar1 = __ptr + (ulong)(param_3 - 1) + 1;
    plVar6 = __ptr;
    do {
      plVar8 = plVar6 + 1;
      __size = png_get_rowbytes(uVar2,uVar3);
      pvVar4 = malloc(__size);
      *plVar6 = (long)pvVar4;
      plVar6 = plVar8;
    } while (plVar8 != plVar1);
    iVar10 = 0;
    plVar6 = __ptr;
    do {
      lVar5 = 0;
      iVar9 = 0;
      iVar7 = iVar10;
      if (0 < param_2) {
        do {
          while( true ) {
            *(undefined1 *)(*plVar6 + lVar5) = *(undefined1 *)(param_5 + iVar7);
            *(undefined1 *)(*plVar6 + 1 + lVar5) = *(undefined1 *)(param_5 + (iVar7 + 1));
            iVar10 = iVar7 + 3;
            *(undefined1 *)(*plVar6 + 2 + lVar5) = *(undefined1 *)(param_5 + (iVar7 + 2));
            if (iVar12 != 4) break;
            lVar11 = (long)iVar10;
            iVar9 = iVar9 + 1;
            iVar10 = iVar7 + 4;
            *(undefined1 *)(*plVar6 + 3 + lVar5) = *(undefined1 *)(param_5 + lVar11);
            lVar5 = lVar5 + iVar12;
            iVar7 = iVar10;
            if (param_2 == iVar9) goto LAB_00401fd9;
          }
          iVar9 = iVar9 + 1;
          lVar5 = lVar5 + iVar12;
          iVar7 = iVar10;
        } while (param_2 != iVar9);
      }
LAB_00401fd9:
      plVar6 = plVar6 + 1;
    } while (plVar6 != plVar1);
    png_write_info(uVar2,uVar3);
    png_write_image(uVar2,__ptr);
    png_write_end(uVar2,0);
    plVar6 = __ptr;
    do {
      pvVar4 = (void *)*plVar6;
      plVar6 = plVar6 + 1;
      free(pvVar4);
    } while (plVar6 != plVar1);
  }
  free(__ptr);
  fclose(__stream);
  return;
}



void FUN_00402070(int param_1,int param_2)

{
  uint uVar1;
  char *pcVar2;
  uint uVar3;
  ulong uVar4;
  bool bVar5;
  char acStack_438 [1032];
  
  if (param_2 < 1) {
    uVar3 = 0;
  }
  else {
    uVar3 = 0;
    uVar4 = 0;
    do {
      uVar1 = *(uint *)((long)(int)((uint)DAT_00538d5a * 0x14) + 4 + uVar4 * 4 + DAT_00405120);
      pcVar2 = ", ";
      if ((uVar4 & 7) == 0) {
        pcVar2 = "\n";
      }
      if (param_1 == 0) {
        sprintf(acStack_438,"%s%2d.=%5d byte",pcVar2,uVar4 & 0xffffffff,(ulong)uVar1);
      }
      else {
        sprintf(acStack_438,"%s%2d.=%08X",pcVar2,uVar4 & 0xffffffff,(ulong)uVar1);
      }
      uVar3 = uVar3 + uVar1;
      strncat(DAT_00538c40,acStack_438,0x8000);
      bVar5 = param_2 - 1 != uVar4;
      uVar4 = uVar4 + 1;
    } while (bVar5);
  }
  if (param_1 == 0) {
    sprintf(acStack_438,"\nsumma=%d byte\n",(ulong)uVar3);
  }
  else {
    sprintf(acStack_438,"\nsumma=0x%X byte\n",(ulong)uVar3);
  }
  strncat(DAT_00538c40,acStack_438,0x8000);
  return;
}



undefined4 FUN_004021a0(int param_1)

{
  if (param_1 < *DAT_00405120) {
    return *(undefined4 *)(DAT_00405120 + (long)(param_1 << 2) + 4 + (long)(DAT_00405120[2] * 0x14))
    ;
  }
  puts("Too big index!");
  return 0;
}



void FUN_004021f0(uint *param_1,char *param_2)

{
  ushort uVar1;
  char *pcVar2;
  int iVar3;
  long lVar4;
  ulong uVar5;
  uint uVar6;
  bool bVar7;
  int local_cc;
  undefined1 local_bc [4];
  char local_b8 [136];
  
  strncpy(local_b8,param_2,0x14);
  uVar1 = (ushort)param_1[2];
  uVar5 = (ulong)uVar1;
  uVar6 = (uint)*(ushort *)((long)param_1 + 6);
  if ((*(ushort *)((long)param_1 + 6) < 0x401) && (uVar1 < 0x641)) {
    if (*(char *)((long)param_1 + 0xe) != '\0') {
      iVar3 = 0;
      lVar4 = (ulong)*param_1 + DAT_00405120;
      do {
        FUN_004021a0((uint)(byte)param_1[1] + iVar3);
        pcVar2 = stpcpy(&DAT_00538c60,&DAT_00538b20);
        pcVar2[0] = '/';
        pcVar2[1] = '\0';
        sprintf(local_b8,"chr_%s_%c.png",param_2,(ulong)(iVar3 + 0x30));
        strcat(&DAT_00538c60,local_b8);
        bVar7 = -1 < *(char *)((long)param_1 + 0xf);
        if (bVar7) {
          local_cc = FUN_004016b0(lVar4,&DAT_00405140,local_bc,uVar6,uVar1,0,0);
        }
        else {
          local_cc = FUN_004016b0(lVar4,&DAT_00405140,local_bc,uVar6,uVar5,1,0);
        }
        iVar3 = iVar3 + 1;
        FUN_00401e40(&DAT_00538c60,uVar6,uVar5,!bVar7,&DAT_00405140);
        lVar4 = lVar4 + local_cc;
      } while (iVar3 < (int)(uint)*(byte *)((long)param_1 + 0xe));
    }
  }
  else {
    printf("Wrong image size! (%dx%d)\n",(ulong)uVar6,uVar5);
  }
  return;
}



ulong FUN_00402370(uint *param_1,char *param_2,undefined8 param_3,int param_4)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  char *pcVar4;
  ulong uVar5;
  long lVar6;
  ulong uVar7;
  undefined4 local_2c;
  
  uVar1 = *(ushort *)((long)param_1 + 6);
  uVar2 = (ushort)param_1[2];
  uVar5 = (ulong)uVar2;
  lVar6 = (ulong)*param_1 + DAT_00405120;
  if ((0x400 < uVar1) || (0x640 < uVar2)) {
    uVar3 = printf("Wrong image size! (%dx%d)\n",(ulong)(uint)uVar1,uVar5);
    return (ulong)uVar3;
  }
  if (param_4 != 0) {
    pcVar4 = stpcpy(&DAT_00538c60,&DAT_00538b20);
    *pcVar4 = '/';
    pcVar4 = stpcpy(pcVar4 + 1,param_2);
    builtin_strncpy(pcVar4,".bin",5);
    local_2c = FUN_004021a0((char)param_1[1]);
    FUN_00401980(lVar6,local_2c,&DAT_00538c60);
  }
  pcVar4 = stpcpy(&DAT_00538c60,&DAT_00538b20);
  *pcVar4 = '/';
  pcVar4 = stpcpy(pcVar4 + 1,param_2);
  builtin_strncpy(pcVar4,".png",5);
  if (*(char *)((long)param_1 + 0xf) < '\0') {
    if (*(char *)((long)param_1 + 0x11) == '\x06') {
      FUN_004016b0(lVar6,&DAT_00405140,&local_2c,uVar1,uVar5,1,0);
    }
    else {
      FUN_004015d0(lVar6,&DAT_00405140,&local_2c,uVar1,uVar5);
    }
    uVar5 = FUN_00401e40(&DAT_00538c60,(uint)uVar1,uVar5,1,&DAT_00405140);
    return uVar5;
  }
  uVar7 = 0;
  FUN_004016b0(lVar6,&DAT_00405140,&local_2c,uVar1,uVar2,0);
  FUN_00401e40(&DAT_00538c60,uVar1,uVar5,0,&DAT_00405140);
  return uVar7;
}



void FUN_00402520(uint *param_1,ulong param_2,undefined4 param_3,undefined4 param_4)

{
  undefined1 uVar1;
  ulong uVar2;
  ulong uVar3;
  undefined2 uVar4;
  char *pcVar5;
  ulong uVar6;
  undefined *puVar7;
  undefined8 local_4b8;
  uint local_4b0;
  undefined1 local_4ac;
  char local_438 [1032];
  
  uVar1 = *(undefined1 *)((long)param_1 + 1);
  printf("Block %2d.\n");
  sprintf(local_438,"Block %2d.\n",param_2 & 0xffffffff);
  strncat(DAT_00538c40,local_438,0x8000);
  uVar2 = local_4b8;
  uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
  local_4b8 = local_4b8 & 0xffffffffffffff00;
  uVar3 = local_4b8;
  uVar4 = local_4b0._2_2_;
  local_4b8._6_2_ = SUB82(uVar2,6);
  local_4b8 = uVar3;
  switch(*(byte *)((long)param_1 + 0xf) & 0x7f) {
  default:
    pcVar5 = "Unknown ?????";
    break;
  case 1:
    local_4b8._4_4_ = (uint)(uVar2 >> 0x20) & 0xffffff00;
    local_4b8 = CONCAT44(local_4b8._4_4_,0x76657270);
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Preview image";
    break;
  case 2:
    sprintf((char *)&local_4b8,"background%d",param_2 & 0xffffffff);
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Background image";
    break;
  case 3:
    local_4b0 = local_4b0 & 0xffffff00;
    local_4b8 = 0x72756f685f6d7261;
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Arm hour";
    break;
  case 4:
    local_4b0 = CONCAT13(local_4b0._3_1_,0x6574);
    local_4b8 = 0x756e696d5f6d7261;
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Arm minute";
    break;
  case 5:
    local_4b0 = CONCAT13(local_4b0._3_1_,0x646e);
    local_4b8 = 0x6f6365735f6d7261;
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Arm second";
    break;
  case 6:
    pcVar5 = "Year";
    break;
  case 7:
    local_4b8 = CONCAT26(local_4b8._6_2_,0x6800000000);
    local_4b8 = CONCAT44(local_4b8._4_4_,0x746e6f4d);
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Month";
    break;
  case 8:
    pcVar5 = "Day";
    break;
  case 9:
    local_4b8 = CONCAT26(local_4b8._6_2_,0x7300000000);
    local_4b8 = CONCAT44(local_4b8._4_4_,0x72756f68);
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Hours";
    break;
  case 10:
    local_4b8 = 0x736574756e696d;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Minutes";
    break;
  case 0xb:
    local_4b8 = 0x73646e6f636573;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Seconds";
    break;
  case 0xc:
    pcVar5 = "AM/PM";
    break;
  case 0xd:
    pcVar5 = "Day of week";
    break;
  case 0xe:
    local_4b8 = CONCAT26(local_4b8._6_2_,0x7300000000);
    local_4b8 = CONCAT44(local_4b8._4_4_,0x70657473);
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Steps";
    break;
  case 0xf:
    pcVar5 = "Pulse";
    break;
  case 0x10:
    pcVar5 = "Calory";
    break;
  case 0x11:
    pcVar5 = "Distance";
    break;
  case 0x12:
    pcVar5 = "Battery";
    break;
  case 0x13:
  case 0x14:
  case 0x15:
  case 0x19:
  case 0x1a:
  case 0x1b:
  case 0x1c:
  case 0x1d:
  case 0x1e:
  case 0x1f:
    pcVar5 = "Unknown ???";
    break;
  case 0x16:
    local_4b8 = CONCAT26(local_4b8._6_2_,0x6f79676962);
    FUN_00402370(param_1,&local_4b8,uVar1,0,param_3);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "axle pawl";
    break;
  case 0x17:
    local_4b0 = 0x676e702e;
    pcVar5 = "Animation";
    local_4b8 = 0x747261706d696e61;
    local_4ac = 0;
    break;
  case 0x18:
    local_4b8 = 0x79726574746162;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "Battery strip";
    break;
  case 0x27:
    local_4b8 = 0x69482072756f68;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "HoursHi";
    break;
  case 0x28:
    local_4b8 = 0x6f4c2072756f68;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "HoursLo";
    break;
  case 0x29:
    local_4b0 = CONCAT22(uVar4,0x69);
    local_4b8 = 0x48206574756e696d;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "MinuteHi";
    break;
  case 0x2a:
    local_4b0 = CONCAT22(uVar4,0x6f);
    local_4b8 = 0x4c206574756e696d;
    FUN_004021f0(param_1,&local_4b8,uVar1,0,param_3,param_4);
    uVar6 = (ulong)*(byte *)((long)param_1 + 0xf);
    pcVar5 = "MinuteLo";
  }
  puVar7 = &DAT_004032ba;
  if (-1 < (char)uVar6) {
    puVar7 = &DAT_004032bf;
  }
  sprintf(local_438,"    0x%02X type: %s %4s (%s)\n",uVar6,pcVar5,puVar7,&local_4b8);
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%08X    (%7u) picture address\n",(ulong)*param_1,(ulong)*param_1);
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%02X,0x%02X     (%3u,%3u) picidx,valami2\n",(ulong)(byte)param_1[1],
          (ulong)*(byte *)((long)param_1 + 5),(ulong)(byte)param_1[1],
          (ulong)*(byte *)((long)param_1 + 5));
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%04X,0x%04X (%3u,%3u) sx,sy\n",(ulong)*(ushort *)((long)param_1 + 6),
          (ulong)(ushort)param_1[2],(ulong)*(ushort *)((long)param_1 + 6),(ulong)(ushort)param_1[2])
  ;
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%04X,0x%04X (%3u,%3u) posX,posY\n",(ulong)*(ushort *)((long)param_1 + 10)
          ,(ulong)(ushort)param_1[3],(ulong)*(ushort *)((long)param_1 + 10),
          (ulong)(ushort)param_1[3]);
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%02X,0x%02X     (%3u,%3u) parts,blocktype\n",
          (ulong)*(byte *)((long)param_1 + 0xe),(ulong)*(byte *)((long)param_1 + 0xf),
          (ulong)*(byte *)((long)param_1 + 0xe),(ulong)*(byte *)((long)param_1 + 0xf));
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  sprintf(local_438,"    0x%02X,0x%02X,0x%02X,0x%02X (%3u,%3u,%3u,%3u) align,compr,centX,centY\n");
  printf("%s",local_438);
  strncat(DAT_00538c40,local_438,0x8000);
  return;
}



void FUN_00402cc0(undefined4 param_1)

{
  ushort uVar1;
  char *pcVar2;
  FILE *__s;
  size_t __size;
  ulong uVar3;
  int iVar4;
  long lVar5;
  long lVar6;
  char local_418 [1024];
  
  uVar1 = *DAT_00405120;
  printf("----------- %s -----------\n",DAT_00538c20);
  DAT_00538c40 = (char *)malloc(0x8000);
  if (DAT_00538c40 == (char *)0x0) {
    puts("stxt malloc error!");
  }
  else {
    uVar3 = (ulong)DAT_00538d5a;
    *DAT_00538c40 = '\0';
    sprintf(local_418,"Number of block = %d , (0x%04X)\n",uVar3,uVar3);
    printf("%s",local_418);
    strncat(DAT_00538c40,local_418,0x8000);
    sprintf(local_418,"Size of pltable = %d , (0x%04X)\n",(ulong)uVar1,(ulong)uVar1);
    printf("%s",local_418);
    strncat(DAT_00538c40,local_418,0x8000);
    FUN_00402070(0,uVar1);
    FUN_00402070(1,uVar1);
    if (DAT_00538d5a != 0) {
      lVar5 = 4;
      iVar4 = 0;
      do {
        iVar4 = iVar4 + 1;
        lVar6 = (long)DAT_00405120 + lVar5;
        lVar5 = lVar5 + 0x14;
        FUN_00402520(lVar6,iVar4,param_1);
      } while (iVar4 < (int)(uint)DAT_00538d5a);
    }
    pcVar2 = stpcpy(&DAT_00538c60,&DAT_00538b20);
    builtin_strncpy(pcVar2,"/block_all.txt",0xf);
    __s = fopen(&DAT_00538c60,"wb");
    pcVar2 = DAT_00538c40;
    __size = strlen(DAT_00538c40);
    fwrite(pcVar2,__size,1,__s);
    fclose(__s);
    free(DAT_00538c40);
  }
  return;
}



uint FUN_00402e90(uint param_1)

{
  uint uVar1;
  
  if ((int)param_1 % 4 < 1) {
    return param_1;
  }
  uVar1 = (param_1 - (int)param_1 % 4) + 4;
  printf("align %d to %d\n",(ulong)param_1,(ulong)uVar1);
  return uVar1;
}



void FUN_00402ed0(undefined4 param_1,undefined8 param_2,undefined8 param_3)

{
  long lVar1;
  
  _DT_INIT();
  lVar1 = 0;
  do {
    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);
    lVar1 = lVar1 + 1;
  } while (lVar1 != 1);
  return;
}



void FUN_00402f40(void)

{
  return;
}



void _DT_FINI(void)

{
  return;
}



